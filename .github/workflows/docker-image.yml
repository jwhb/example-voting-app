name: Build and scan OCI image

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - context: ./vote
            dockerfile: ./vote/Dockerfile
            image: vote
          - context: ./worker
            dockerfile: ./worker/Dockerfile
            image: worker
          - context: ./result
            dockerfile: ./result/Dockerfile
            image: result
    
    env:
      IMAGE_NAME: ${{ github.repository }}/${{ matrix.image }}
      REGISTRY: ghcr.io

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
      security-events: write

    steps:
    - uses: actions/checkout@v4

    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      with:
        context: ${{ matrix.context }}
        file: ${{ matrix.dockerfile }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Scan image
      id: scan
      uses: sysdiglabs/scan-action@v5
      with:
          image-tag: ${{ steps.meta.outputs.tags }}
          sysdig-secure-token: ${{ secrets.SYSDIG_SECURE_TOKEN }}
          sysdig-secure-url: ${{ secrets.SYSDIG_SECURE_URL }}

    - name: Upload SARIF file
      if: success() || failure()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: ${{ github.workspace }}/sarif.json
